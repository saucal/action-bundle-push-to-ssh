name: "Push to SSH"
description: "Push built source to SSH"
inputs:
  source:
    description: "Source directory"
    required: false
    default: 'source'
  built:
    description: "Previous build directory (needs to be repo and have a remote)"
    required: false
    default: 'built'
  env-host:
    description: "Env Host"
    required: true
    default: ''
  env-port:
    description: "Env Port"
    required: true
    default: '22'
  env-user:
    description: "Env User"
    required: true
    default: ''
  env-key:
    description: "Env SSH Key"
    required: false
    default: ''
  env-pass:
    description: "Env Password"
    required: false
    default: ''
  env-remote-root:
    description: "Env Remote Root"
    required: true
    default: ''
  ssh-flags:
    description: "SSH Flags to pass to the RSync command"
    required: false
    default: ''
  ssh-shell-params:
    description: "Parameters to be passed to the SSH shell command"
    required: false
    default: ''
  ssh-extra-options:
    description: "Extra options for the RSync command"
    required: false
    default: ''
  dry-run:
    description: "Only run the Consistency check"
    required: false
    default: ''
  force-ignore:
    description: "Force ignore files"
    required: false
    default: |
      /auth.json
      /vendor/*
      !/vendor/composer
      /vendor/composer/*
      !/vendor/composer/installers
      !/vendor/composer/installed.json
  ssh-ignore:
    description: "Force ignore files"
    required: false
    default: |
      .git
      wp-debug.log
      uploads/
      /vendor/**
      /auth.json
      /composer.json
      /composer.lock
      /object-cache.php
      /db.php
  disable-consistency-check:
    description: Do not do a consistency check and complete the workflow regardless.
    required: false
    default: ''
outputs:
  rsyncOutput:
    description: "Manifest of files changed"
    value: ${{ steps.pre-build-consistency-check.outputs.outputBuffer }} ${{ steps.post-build-consistency-check.outputs.outputBuffer }}

runs:
  using: "composite"
  steps:
    - name: Set message
      uses: saucal/action-slack-notification@v1
      with:
        status: "Preparing built assets :large_yellow_circle:"

    - name: Set message
      if: "${{ inputs.disable-consistency-check != 'true' }}"
      uses: saucal/action-slack-notification@v1
      with:
        status: "Running a Filesystem consistency check :large_yellow_circle:"

    - name: Pre-build Consistency check
      id: pre-build-consistency-check
      if: "${{ inputs.disable-consistency-check != 'true' && inputs.dry-run == 'true' }}"
      uses: saucal/action-deploy-ssh@v1-matias
      with:
        env-host: ${{ inputs.env-host }}
        env-port: ${{ inputs.env-port }}
        env-user: ${{ inputs.env-user }}
        env-key: ${{ inputs.env-key }}
        env-pass: ${{ inputs.env-pass }}
        env-local-root: ${{ inputs.built }}
        env-remote-root: ${{ inputs.env-remote-root }}
        force-ignore: ${{ inputs.ssh-ignore }}
        ssh-flags: ${{ inputs.ssh-flags }}
        ssh-shell-params: ${{ inputs.ssh-shell-params }}
        ssh-extra-options: ${{ inputs.ssh-extra-options }}
        consistency-check: true

    - name: Setup SSH Keys
      shell: bash
      run: |
          if [ ! -z "$SSH_AUTH_SOCK" ] ; then
            echo $SSH_AUTH_SOCK;
            ssh-add -L;
          fi
          ls -al /home/runner/.ssh;
          which sshpass;
          exit 1

    - name: Build To GIT
      if: "${{ inputs.dry-run != 'true' }}"
      id: 'build-to-git'
      uses: saucal/action-build-to-git@feature/git-clean # TODO: version after merge of that action
      with:
        from: ${{ inputs.source }}
        path: ${{ inputs.built }}
        defer-push: "true"
        force-ignore: ${{ inputs.force-ignore }}

    - name: Set message
      if: "${{ inputs.dry-run != 'true' }}"
      uses: saucal/action-slack-notification@v1
      with:
        status: "Pushing to SSH :large_yellow_circle:"

    - name: Define manifest to use
      if: "${{ inputs.disable-consistency-check != 'true' && inputs.dry-run != 'true' }}"
      id: manifest-load
      shell: bash
      run: |
        {
          echo 'manifest<<EOF_MANIFEST'
          echo "${{ steps.build-to-git.outputs.manifest }}"
          echo 'EOF_MANIFEST'
        } >> $GITHUB_OUTPUT

    - name: Post-build Consistency check
      id: post-build-consistency-check
      if: "${{ inputs.disable-consistency-check != 'true' && inputs.dry-run != 'true' }}"
      continue-on-error: true
      uses: saucal/action-deploy-ssh@v1-matias
      with:
        env-host: ${{ inputs.env-host }}
        env-port: ${{ inputs.env-port }}
        env-user: ${{ inputs.env-user }}
        env-key: ${{ inputs.env-key }}
        env-pass: ${{ inputs.env-pass }}
        env-local-root: ${{ inputs.built }}
        env-remote-root: ${{ inputs.env-remote-root }}
        force-ignore: ${{ inputs.ssh-ignore }}
        ssh-flags: ${{ inputs.ssh-flags }}
        ssh-shell-params: ${{ inputs.ssh-shell-params }}
        ssh-extra-options: ${{ inputs.ssh-extra-options }}
        consistency-check: true

    # The output of the post-build-consistency-check should match our manifest.
    - name: Check Post-build Consistency results
      if: "${{ inputs.disable-consistency-check != 'true' && inputs.dry-run != 'true' }}"
      shell: bash
      env:
        PATH_DIR: ${{ inputs.built }}
        SSH_IGNORE_LIST: ${{ inputs.ssh-ignore }}
        GIT_MANIFEST: ${{ steps.manifest-load.outputs.manifest }}
        RSYNC_MANIFEST: "${{ runner.temp }}/rsyncOutput"
      run: |
        echo -n "${{ steps.post-build-consistency-check.outputs.outputBuffer }}" > "$RUNNER_TEMP/rsyncOutput"
        "${{ github.action_path }}/check-against-manifest.sh"

    - name: Deploy to SSH
      if: "${{ inputs.dry-run != 'true' }}"
      id: 'deploy-to-ssh'
      uses: saucal/action-deploy-ssh@v1-matias
      with:
        env-host: ${{ inputs.env-host }}
        env-port: ${{ inputs.env-port }}
        env-user: ${{ inputs.env-user }}
        env-key: ${{ inputs.env-key }}
        env-pass: ${{ inputs.env-pass }}
        env-local-root: ${{ inputs.built }}
        env-remote-root: ${{ inputs.env-remote-root }}
        force-ignore: ${{ inputs.ssh-ignore }}
        ssh-flags: ${{ inputs.ssh-flags }}
        ssh-shell-params: ${{ inputs.ssh-shell-params }}
        ssh-extra-options: ${{ inputs.ssh-extra-options }}

    - name: Set message
      if: "${{ inputs.dry-run != 'true' }}"
      uses: saucal/action-slack-notification@v1
      with:
        status: "Pushing to GIT :large_yellow_circle:"

    - name: Push to GIT
      if: "${{ inputs.dry-run != 'true' }}"
      id: 'push-to-git'
      uses: saucal/action-build-to-git@feature/git-clean # TODO: version after merge of that action
      with:
        path: ${{ inputs.built }}
        do-push: "true"

    - name: Cleanup
      shell: bash
      run: |
        rm -f /home/runner/.ssh/github_actions
